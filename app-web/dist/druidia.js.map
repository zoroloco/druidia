{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","app-web/src/exportme.ts","app-web/src/main.ts","node_modules/underscore/underscore.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","sayHello","name","console","log","addNums","num0","num1","showHello","divName","elt","document","getElementById","write","__filename","innerText","underscore_1","isEmpty","exportme_1","exportme_2","createReduce","dir","iterator","obj","iteratee","memo","keys","index","currentKey","context","optimizeCb","isArrayLike","_","arguments","createPredicateIndexFinder","array","predicate","cb","getLength","createIndexFinder","predicateFind","sortedIndex","item","idx","Math","max","min","slice","isNaN","collectNonEnumProps","nonEnumIdx","nonEnumerableProps","constructor","proto","isFunction","prototype","ObjProto","prop","has","contains","push","root","this","previousUnderscore","ArrayProto","Array","Object","FuncProto","Function","toString","hasOwnProperty","nativeIsArray","isArray","nativeKeys","nativeBind","bind","nativeCreate","create","Ctor","_wrapped","VERSION","func","argCount","value","other","collection","accumulator","apply","identity","isObject","matcher","property","Infinity","createAssigner","keysFunc","undefinedOnly","source","key","baseCreate","result","MAX_ARRAY_INDEX","pow","each","forEach","map","collect","results","reduce","foldl","inject","reduceRight","foldr","find","detect","findIndex","findKey","filter","select","list","reject","negate","every","all","some","any","includes","include","fromIndex","guard","values","indexOf","invoke","method","args","isFunc","pluck","where","attrs","findWhere","computed","lastComputed","shuffle","rand","set","shuffled","random","sample","sortBy","criteria","sort","left","right","b","group","behavior","groupBy","indexBy","countBy","toArray","size","partition","pass","fail","first","head","take","initial","last","rest","tail","drop","compact","flatten","input","shallow","strict","startIndex","output","isArguments","j","len","without","difference","uniq","unique","isSorted","isBoolean","seen","union","intersection","argsLength","zip","unzip","object","findLastIndex","low","high","mid","floor","lastIndexOf","range","start","stop","step","ceil","executeBound","sourceFunc","boundFunc","callingContext","self","TypeError","bound","concat","partial","boundArgs","position","bindAll","memoize","hasher","cache","address","delay","wait","setTimeout","defer","throttle","options","timeout","previous","later","leading","now","remaining","clearTimeout","trailing","debounce","immediate","timestamp","callNow","wrap","wrapper","compose","after","times","before","once","hasEnumBug","propertyIsEnumerable","allKeys","mapObject","pairs","invert","functions","methods","names","extend","extendOwn","assign","pick","oiteratee","omit","String","defaults","props","clone","tap","interceptor","isMatch","eq","aStack","bStack","className","areArrays","aCtor","bCtor","pop","isEqual","isString","isElement","nodeType","type","Int8Array","isFinite","parseFloat","isNumber","isNull","isUndefined","noConflict","constant","noop","propertyOf","matches","accum","Date","getTime","escapeMap","&","<",">","\"","'","`","unescapeMap","createEscaper","escaper","match","join","testRegexp","RegExp","replaceRegexp","string","test","replace","escape","unescape","fallback","idCounter","uniqueId","prefix","id","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n"," "," ","escapeChar","template","text","settings","oldSettings","offset","variable","render","data","argument","chain","instance","_chain","mixin","valueOf","toJSON","define","amd"],"mappings":"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","file":"druidia.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export function sayHello(name: string){\n  console.log(\"Name=\"+name);\n  return `Hello dude from ${name}`;\n}\n\nexport function addNums(num0: number , num1: number){\n  console.log(\"Adding: \"+num0+\" + \"+num1);\n  return num0 + num1;\n}\n","import { sayHello } from \"./exportme\";\nimport { addNums } from \"./exportme\";\n//import { * } from \"./student\" as Student;\n\nimport { isEmpty } from \"underscore\";\n\n\ninterface Person {\n    firstName: string;\n    lastName: string;\n}\n\nfunction greeter(person : Person) {\n    console.log(\"Hello, \" + person.firstName + \" \" + person.lastName);\n}\n\n//var user = new Student(\"Jane\", \"M.\", \"Jones\");\n//greeter(user);\n\nfunction showHello(divName: string, name: string) {\n    const elt = document.getElementById(divName);\n    document.write(__filename);\n    elt.innerText = isEmpty(name)+\" ---- \"+sayHello(name);\n}\n\nconsole.log(addNums(1,2));\nshowHello(\"greeting\",\"f\");\n","//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n"]}